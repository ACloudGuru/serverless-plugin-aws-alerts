service: your-service
provider:
  name: aws
  runtime: nodejs4.3

package:
  exclude:
    - node_modules/**
    - yarn.lock

custom:
  notifications:
    - protocol: email
      endpoint: john@acloud.guru

  alerts:
    stages: # Optionally - select which stages to deploy alarms to
      - producton
      - staging
    topics:
      ok: 
        topic: ${self:service}-${opt:stage}-alerts-ok
        notifications: ${self:custom.notifications}
      alarm:
        topic: ${self:service}-${opt:stage}-alerts-alarm
        notifications: ${self:custom.notifications}
      insufficientData:
        topic: ${self:service}-${opt:stage}-alerts-insufficientData
        notifications: ${self:custom.notifications}

    definitions:  # these defaults are merged with your definitions
      functionErrors:
        period: 600
      functionInvocations:
        threshold: 10
        period: 600
      customAlarm:
        namespace: 'AWS/Lambda'
        metric: duration
        threshold: 200
        statistic: Average
        period: 300
        evaluationPeriods: 1
        comparisonOperator: GreaterThanThreshold
    global:
      - functionThrottles
      - functionErrors
    function:
      - functionInvocations
      - functionDuration

plugins:
  - serverless-plugin-aws-alerts

functions:
  foo:
    handler: foo.handler
    alarms: # merged with function alarms
      - customAlarm
      - name: fooAlarm
        namespace: 'AWS/Lambda'
        metric: errors # define custom metrics here
        threshold: 1
        statistic: Minimum
        period: 60
        evaluationPeriods: 1
        comparisonOperator: GreaterThanThreshold

  error:
    handler: error.handler
    alarms:
      - customAlarm
      - name: bunyanErrors
        namespace: 'AWS/Lambda'
        metric: BunyanErrors
        threshold: 0
        statistic: Sum
        period: 60
        evaluationPeriods: 1
        comparisonOperator: GreaterThanThreshold
        pattern: '{$.level > 40}'

  slow:
    handler: slow.handler
    alarms:
      - customAlarm